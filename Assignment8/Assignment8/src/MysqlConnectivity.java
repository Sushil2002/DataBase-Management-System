import java.sql.*;
import java.util.*;  
class MysqlConnectivity {
public static void main(String arg[])
{
       Connection connection = null;
       try
       {      
           Class.forName("com.mysql.cj.jdbc.Driver");
           connection = DriverManager.getConnection("jdbc:mysql://localhost/praticle","root", "password");
           Scanner sc = new Scanner(System.in);
           Statement statement;
           statement = connection.createStatement();
//  In Java, a statement is an executable instruction that tells the compiler what to perform.
           ResultSet resultSet = null;
//           A ResultSet object is a table of data representing a database result set, which is 
//           usually generated by executing a statement that queries the database.
           int choice = 0;
           while(choice != 5)
           {
        	   System.out.println("----------MENU-----------");
        	   System.out.println("1. Display all entries from Employee table.");
        	   System.out.println("2. Insert Record into Employee table.");
        	   System.out.println("3. Update Record from Employee table.");
        	   System.out.println("4. Delete Record from Employee table.");
        	   System.out.println("5. Exit.");
        	   choice = sc.nextInt();
        	   int eno;
        	   String enm;
        	   if(choice == 1)
        	   {
//        		   System.out.println();
        		   resultSet = statement.executeQuery("select * from emp");
        		   System.out.println("Employee Table entries : ");
        		   while (resultSet.next()) 
        		   {
        			   eno = resultSet.getInt("eno");
        			   enm = resultSet.getString("enm").trim();
        			   System.out.println("Employee No : " + eno + " Employee Name : " + enm);
        		   }
        		   System.out.println();
        	   }
        	   else if(choice == 2)
        	   {
        		   System.out.println("Enter Employee Number and Name : ");
        		   eno = sc.nextInt();
        		   enm = sc.nextLine();
        		   String query1 = "insert into emp" + " values(" +"'"+ eno + "','" + enm + "'," + "800,20,21)";
        		   try 
        		   {
        			   statement.executeUpdate(query1);
        			   System.out.println("Record is inserted in the table successfully.");
        		   }
        		   catch (SQLIntegrityConstraintViolationException e) 
        		   {
        			   throw new RuntimeException("Employee Name already exists.");
        		   }
        	   }
        	   else if(choice == 3)
        	   {
        		   System.out.println("Enter Employee Number and Name: ");
        		   eno = sc.nextInt();
        		   enm = sc.nextLine();
        		   String query1 = "update emp set enm='" + enm + "'" + "where eno=" + eno;
        		   try
        		   {
        			   statement.executeUpdate(query1);
        			   System.out.println("Record is updated in the table successfully.");
        		   }
        		   catch (SQLIntegrityConstraintViolationException e) 
        		   {
        			   throw new RuntimeException("Employee number does not exist.");
        		   }
        	   }
        	   else if(choice == 4)
        	   {
        		   System.out.println("Enter Employee Number: ");
        		   eno = sc.nextInt();
        		   String query1 = "DELETE FROM emp WHERE eno = " + eno;
        		   try 
        		   {
        			   statement.executeUpdate(query1);
        			   System.out.println("Record is deleted from the table successfully.");
        		   }
        		   catch (Exception e) 
        		   {
        			   throw new RuntimeException("Employee number does not exist.");
        		   }
        	   }
           }
           resultSet.close();
           statement.close();
           connection.close();
           sc.close();
       }
       catch (Exception e) 
       {
           System.out.println(e);
       }
   }
}